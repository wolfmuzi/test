<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iuling.mods.fabric.mapper.FabricOrderItemMapper">
    
	<sql id="fabricOrderItemColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.supplier_id AS "supplier.id",
		a.num AS "num",
		a.epc AS "epc",
		a.color_id AS "color.id",
		a.price01 AS "price01",
		a.price02 AS "price02",
		a.send_date AS "sendDate",
		a.return_date AS "returnDate",
		a.fstatus AS "fstatus",
		a.fdate AS "fdate",
		a.code AS "code",
		a.ferror AS "ferror",
		a.gstatus AS "gstatus",
		a.gerror AS "gerror",
		a.order_date AS "orderDate",
		a.fabric_order_id AS "fabricOrder.id",
		a.remarks AS "remarks",
				a.price AS "price",
				
				
				
				
				
		supplier.name AS "supplier.name",
				
				
				
		color.name AS "color.name",
				
				
				
				
				
				
				
				
				
				
				
				
		fabricOrder.code AS "fabricOrder.code"
	</sql>
	
	<sql id="fabricOrderItemJoins">
		
		LEFT JOIN base_supplier supplier ON supplier.id = a.supplier_id
		LEFT JOIN base_colors color ON color.id = a.color_id
		LEFT JOIN fabric_order fabricOrder ON fabricOrder.id = a.fabric_order_id
	</sql>
	
    
	<select id="get" resultType="FabricOrderItem" >
		SELECT 
			<include refid="fabricOrderItemColumns"/>
		FROM fabric_order_item a
		<include refid="fabricOrderItemJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="FabricOrderItem" >
		SELECT
		<include refid="fabricOrderItemColumns"/>
		FROM fabric_order_item a
		<include refid="fabricOrderItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="supplier != null and supplier.id != null and supplier.id != ''">
				AND a.supplier_id = #{supplier.id}
			</if>
			<if test="epc != null and epc != ''">
				AND a.epc = #{epc}
			</if>

			<if test="id != null and id != ''">
				AND a.id != #{id}
			</if>
			<if test="fstatus != null and fstatus != ''">
				AND a.fstatus = #{fstatus}
			</if>
			<if test="gstatus != null and gstatus != ''">
				AND a.gstatus = #{gstatus}
			</if>
			<if test="fabricOrder != null and fabricOrder.id != null and fabricOrder.id != ''">
				AND a.fabric_order_id = #{fabricOrder.id}
			</if>
			<if test="createDate != null ">
				AND date_format(a.create_date, '%Y-%m') =  date_format(#{createDate}, '%Y-%m')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>




	<select id="findListByDate" resultType="FabricOrderItem" >
		SELECT
		a.*
		FROM fabric_order_item a
		LEFT JOIN fabric_order fabricOrder ON fabricOrder.id = a.fabric_order_id
		LEFT JOIN base_common_role role ON role.id = fabricOrder.common_role_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="supplier != null and supplier.id != null and supplier.id != ''">
				AND a.supplier_id = #{supplier.id}
			</if>
			<if test="fabricOrder != null and fabricOrder.commonRole != null and fabricOrder.commonRole.id != ''">
				AND role.id = #{fabricOrder.commonRole.id}
			</if>
			<if test="sendDate != null ">
				AND date_format(a.send_date, '%Y-%m') =  date_format(#{sendDate}, '%Y-%m')

			</if>

			<if test="orderDate != null ">
				AND date_format(a.order_date, '%Y-%m') =  date_format(#{orderDate}, '%Y-%m')

			</if>

			<if test="returnDate != null ">
				AND date_format(a.return_date, '%Y-%m') =  date_format(#{returnDate}, '%Y-%m')

			</if>
			<if test="fdate != null ">
				AND date_format(a.fdate, '%Y-%m') =  date_format(#{fdate}, '%Y-%m')

			</if>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>



	<select id="findAllList" resultType="FabricOrderItem" >
		SELECT 
			<include refid="fabricOrderItemColumns"/>
		FROM fabric_order_item a
		<include refid="fabricOrderItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>



	<select id="findByParam" resultType="FabricOrderItem" >
		SELECT
		  a.epc as "epc",
		stock.name as "name",
		supplier.name AS "supplier.name",
		role.name AS "fabricOrder.commonRole.name",
		a.create_date as "createDate"
		FROM fabric_order_item a
		LEFT JOIN fabric_stock stock ON stock.epc = a.epc
		LEFT JOIN fabric_order o ON  o.id = a.fabric_order_id
		LEFT JOIN base_common_role role on role.id = o.common_role_id
		LEFT JOIN base_supplier supplier ON supplier.id = a.supplier_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="epc != null and epc != ''">
				and epc = #{epc}
			</if>
			<if test="fabricOrder.commonRole.id != null and fabricOrder.commonRole.id != ''">
				and role.id = #{fabricOrder.commonRole.id}
			</if>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>



	<insert id="insert">
		INSERT INTO fabric_order_item(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			supplier_id,
			num,
			epc,
			color_id,
			price01,
			price02,
			send_date,
			return_date,
			fstatus,
			fdate,
			code,
			ferror,
			gstatus,
			gerror,
			order_date,
			fabric_order_id,
			remarks,
			price
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{supplier.id},
			#{num},
			#{epc},
			#{color.id},
			#{price01},
			#{price02},
			#{sendDate},
			#{returnDate},
			#{fstatus},
			#{fdate},
			#{code},
			#{ferror},
			#{gstatus},
			#{gerror},
			#{orderDate},
			#{fabricOrder.id},
			#{remarks},
			#{price}
		)
	</insert>
	
	<update id="update">
		UPDATE fabric_order_item SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			price = #{price},
			supplier_id = #{supplier.id},
			num = #{num},
			epc = #{epc},
			color_id = #{color.id},
			price01 = #{price01},
			price02 = #{price02},
			send_date = #{sendDate},
			return_date = #{returnDate},
			fstatus = #{fstatus},
			fdate = #{fdate},
			code = #{code},
			ferror = #{ferror},
			gstatus = #{gstatus},
			gerror = #{gerror},
			order_date = #{orderDate},
			fabric_order_id = #{fabricOrder.id},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM fabric_order_item
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE fabric_order_item SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="FabricOrderItem" statementType="STATEMENT">
		select * FROM fabric_order_item  where ${propertyName} = '${value}'
	</select>
	
</mapper>